// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PTC.Data;

#nullable disable

namespace PTC.Migrations
{
    [DbContext(typeof(PtcContext))]
    partial class PtcContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PTC.Models.CountryModel", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CODE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.HasKey("Code")
                        .HasName("CODE");

                    b.ToTable("COUNTRY", (string)null);
                });

            modelBuilder.Entity("PTC.Models.DdedmEmployee", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EMP_ID");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("ACTIVE");

                    b.Property<string>("CurrentPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CURRENT_PHONE");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DEPARTMENT");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("GradeId")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("GRADE_ID");

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MOBILE_PHONE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.Property<string>("PrivateEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PRIVATE_EMAIL");

                    b.Property<string>("SectionStru")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SECTION_STRU");

                    b.HasKey("EmpId")
                        .HasName("PK__DDEDM_EM__16EBFA269A66E613");

                    b.ToTable("DDEDM_EMPLOYEE", (string)null);
                });

            modelBuilder.Entity("PTC.Models.EmpScanRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LoginId")
                        .HasColumnType("int")
                        .HasColumnName("LOGIN_ID");

                    b.Property<DateTime>("ScanTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("SCAN_TIME");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int")
                        .HasColumnName("TRANSACTION_ID");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TYPE");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("TRXTMS_EMP_SCAN_RECORD", (string)null);
                });

            modelBuilder.Entity("PTC.Models.EmployeeClocking", b =>
                {
                    b.Property<string>("EmpId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("EMP_ID");

                    b.Property<DateOnly>("ClockingDate")
                        .HasColumnType("date")
                        .HasColumnName("CLOCKING_DATE");

                    b.Property<DateTime>("ClockingTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CLOCKING_TIME");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("InOut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IN_OUT");

                    b.Property<bool>("Processed")
                        .HasColumnType("bit")
                        .HasColumnName("PROCESSED");

                    b.Property<string>("ShiftGroupId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SHIFTGROUP_ID");

                    b.Property<string>("ShiftId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SHIFT_ID");

                    b.Property<string>("TimeReasonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TIMEREASON_ID");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("EmpId")
                        .HasName("EMP_ID");

                    b.ToTable("TRXTMS_TIME_CLOCKING", (string)null);
                });

            modelBuilder.Entity("PTC.Models.GuestAttndnc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("DATE");

                    b.Property<bool>("Flag")
                        .HasColumnType("bit")
                        .HasColumnName("FLAG");

                    b.Property<TimeOnly>("TimeIn")
                        .HasColumnType("time")
                        .HasColumnName("TIME_IN");

                    b.Property<TimeOnly?>("TimeOut")
                        .HasColumnType("time")
                        .HasColumnName("TIME_OUT");

                    b.Property<int>("Total")
                        .HasColumnType("int")
                        .HasColumnName("TOTAL");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TRANSACTION_ID");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("GUEST_ATTNDNC", (string)null);
                });

            modelBuilder.Entity("PTC.Models.GuestCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CATEGORY_NAME");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("GUEST_CATEGORY", (string)null);
                });

            modelBuilder.Entity("PTC.Models.GuestIdTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE");

                    b.HasKey("Id")
                        .HasName("USER_ID");

                    b.ToTable("GUEST_ID_TEMP", (string)null);
                });

            modelBuilder.Entity("PTC.Models.GuestReg", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ID");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CATEGORY_ID");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("COMPANY");

                    b.Property<string>("CompanyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("COMPANY_TYPE");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("COUNTRY_CODE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("DeptSect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DEPT_SECT");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMAIL");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("END_DATE");

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("IMAGE_DATA");

                    b.Property<string>("MetId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MET_ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<string>("NationalId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NATIONAL_ID");

                    b.Property<string>("ReqId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("REQ_ID");

                    b.Property<string>("Requirement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("REQUIREMENT");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("START_DATE");

                    b.Property<int>("Total")
                        .HasColumnType("int")
                        .HasColumnName("TOTAL");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("GUEST_REG", null, t =>
                        {
                            t.HasTrigger("UPDATEDATE");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("PTC.Models.GuestScanRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LoginId")
                        .HasColumnType("int")
                        .HasColumnName("LOGIN_ID");

                    b.Property<DateTime>("ScanTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("SCAN_TIME");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int")
                        .HasColumnName("TRANSACTION_ID");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TYPE");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("GUEST_SCAN_RECORD", (string)null);
                });

            modelBuilder.Entity("PTC.Models.PasswordDump", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PASSWORD");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("USER_PASSWORD_DUMP", (string)null);
                });

            modelBuilder.Entity("PTC.Models.PsgSpplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Flag")
                        .HasColumnType("bit")
                        .HasColumnName("FLAG");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<int>("VhcId")
                        .HasColumnType("int")
                        .HasColumnName("VHC_ID");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("PSG_SPPLIER", (string)null);
                });

            modelBuilder.Entity("PTC.Models.SpplierTransactionRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LoginId")
                        .HasColumnType("int")
                        .HasColumnName("LOGIN_ID");

                    b.Property<DateTime>("ScanTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("SCAN_TIME");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int")
                        .HasColumnName("TRANSACTION_ID");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TYPE");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("SPPLIER_TRANSACTION_RECORD", (string)null);
                });

            modelBuilder.Entity("PTC.Models.SsoUser", b =>
                {
                    b.Property<string>("EmpId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("EMP_ID");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("ROLE_ID");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USERNAME");

                    b.HasKey("EmpId")
                        .HasName("EMP_ID");

                    b.ToTable("SSO_USER", (string)null);
                });

            modelBuilder.Entity("PTC.Models.TrxTmsEmpPcDtKpFlt", b =>
                {
                    b.Property<int>("SeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SEQ_NO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeqNo"));

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("DATE");

                    b.Property<string>("Department")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DEPARTMENT");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EMP_ID");

                    b.Property<bool>("Flag")
                        .HasColumnType("bit")
                        .HasColumnName("FLAG");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.Property<string>("Reason")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("REASON");

                    b.Property<TimeOnly?>("TimeOut")
                        .HasPrecision(0)
                        .HasColumnType("time(0)")
                        .HasColumnName("TIME_OUT");

                    b.Property<TimeOnly?>("TimeReturn")
                        .HasPrecision(0)
                        .HasColumnType("time(0)")
                        .HasColumnName("TIME_RETURN");

                    b.Property<string>("TimereasonId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("TIMEREASON_ID");

                    b.HasKey("SeqNo")
                        .HasName("PK__TRXTMS_E__04B917664F5755A5");

                    b.ToTable("TRXTMS_EMP_PCDTKP_FLT", (string)null);
                });

            modelBuilder.Entity("PTC.Models.TrxTmsEmpPcDtKpFltAct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("DATE");

                    b.Property<string>("Department")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DEPARTMENT");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EMP_ID");

                    b.Property<bool>("Flag")
                        .HasColumnType("bit")
                        .HasColumnName("FLAG");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.Property<string>("Reason")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("REASON");

                    b.Property<int?>("SeqNo")
                        .HasColumnType("int")
                        .HasColumnName("SEQ_NO");

                    b.Property<TimeOnly?>("TimeOut")
                        .HasPrecision(0)
                        .HasColumnType("time(0)")
                        .HasColumnName("TIME_OUT");

                    b.Property<TimeOnly?>("TimeReturn")
                        .HasPrecision(0)
                        .HasColumnType("time(0)")
                        .HasColumnName("TIME_RETURN");

                    b.Property<string>("TimereasonId")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("TIMEREASON_ID");

                    b.HasKey("Id")
                        .HasName("PK__TRXTMS_E__3214EC27E7A29CD2");

                    b.ToTable("TRXTMS_EMP_PCDTKP_FLT_ACT", (string)null);
                });

            modelBuilder.Entity("PTC.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("PTC_USER", (string)null);
                });

            modelBuilder.Entity("PTC.Models.UserLock", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("USER_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.HasKey("UserId")
                        .HasName("USER_ID");

                    b.ToTable("USER_LOCK", (string)null);
                });

            modelBuilder.Entity("PTC.Models.UserPasswordAttempt", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("USER_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("Attempt")
                        .HasColumnType("int")
                        .HasColumnName("ATTEMPT");

                    b.HasKey("UserId")
                        .HasName("USER_ID");

                    b.ToTable("USER_PASSWORD_ATTEMPT", (string)null);
                });

            modelBuilder.Entity("PTC.Models.UserRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ADDRESS");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LOGIN_TIME");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("PTC_USER_RECORD", (string)null);
                });

            modelBuilder.Entity("PTC.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ROLE_NAME");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("USER_ROLE", (string)null);
                });

            modelBuilder.Entity("PTC.Models.VhcSpplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("COMPANY");

                    b.Property<DateTime?>("ConfirmOutTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CONFIRM_OUT_TIME");

                    b.Property<bool>("Flag")
                        .HasColumnType("bit")
                        .HasColumnName("FLAG");

                    b.Property<DateTime>("InTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("IN_TIME");

                    b.Property<int>("PassangerCount")
                        .HasColumnType("int")
                        .HasColumnName("PASSANGER_COUNT");

                    b.Property<string>("VehicleId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VEHICLE_ID");

                    b.Property<byte[]>("VehicleImg")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("VEHICLE_IMG");

                    b.Property<string>("VehicleType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VEHICLE_TYPE");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("VHC_SPPLIER", (string)null);
                });

            modelBuilder.Entity("PTC.Models.WrkPermAttndnc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("DATE");

                    b.Property<bool>("Flag")
                        .HasColumnType("bit")
                        .HasColumnName("FLAG");

                    b.Property<TimeOnly>("InTime")
                        .HasColumnType("time")
                        .HasColumnName("TIME_IN");

                    b.Property<TimeOnly?>("OutTime")
                        .HasColumnType("time")
                        .HasColumnName("TIME_OUT");

                    b.Property<string>("RegNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("REG_NUM");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int")
                        .HasColumnName("WORKER_ID");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("WRKPERM_ATTNDNC", (string)null);
                });

            modelBuilder.Entity("PTC.Models.WrkPermDesc", b =>
                {
                    b.Property<string>("RegNum")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("REG_NUM");

                    b.Property<string>("CompName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("COMP_NAME");

                    b.Property<DateOnly>("End")
                        .HasColumnType("date")
                        .HasColumnName("END_DATE");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LOCATION");

                    b.Property<DateOnly>("Start")
                        .HasColumnType("date")
                        .HasColumnName("START_DATE");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TITLE");

                    b.HasKey("RegNum")
                        .HasName("REG_NUM");

                    b.ToTable("WRKPERM_DESC", (string)null);
                });

            modelBuilder.Entity("PTC.Models.WrkPermScanRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LoginId")
                        .HasColumnType("int")
                        .HasColumnName("LOGIN_ID");

                    b.Property<DateTime>("ScanTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("SCAN_TIME");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int")
                        .HasColumnName("TRANSACTION_ID");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TYPE");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("WRKPERM_SCAN_RECORD", (string)null);
                });

            modelBuilder.Entity("PTC.Models.WrkPermWorker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Certificate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CERTIFICATION");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<string>("NationalId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NATIONAL_ID");

                    b.Property<string>("RegNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("REG_NUM");

                    b.Property<string>("Speciality")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SPECIALITY");

                    b.HasKey("Id")
                        .HasName("ID");

                    b.ToTable("WRKPERM_WORKER", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
