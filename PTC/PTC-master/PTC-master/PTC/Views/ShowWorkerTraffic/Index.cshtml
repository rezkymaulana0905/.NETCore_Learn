@{
    ViewData["title"] = "Worker Traffic";
}
@using PTC.Utils
@model Pagination<ShowWrkPermAttndnc>

<div class="container-xl">
    <div class="table-responsive">
        <div class="table-wrapper">
            <div class="table-title">
                <h2>Contractor Traffic</h2>
                <form method="get" action="@Url.Action("Index")" class="show-guest-form" id="worker-traffic">
                    <div>
                        <input type="date" name="startDate" id="startDate" value="@ViewData["startDate"]" class="form-control" />
                    </div>
                    <div>
                        <input type="date" name="endDate" id="endDate" value="@ViewData["endDate"]" class="form-control" />
                    </div>
                    <div class="search-box">
                        <input type="text" id="searchQuery" name="searchQuery" class="form-control" placeholder="Search..." value="@ViewData["searchQuery"]">
                    </div>
                </form>
            </div>

            <table id="guestListTable" class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Name</th>
                        <th>Company</th>
                        <th>Work Location</th>
                        <th>Work Description</th>
                        <th>Time In</th>
                        <th>Time Out</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Date)</td>
                            <td>@Html.DisplayFor(modelItem => item.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.Company)</td>
                            <td>@Html.DisplayFor(modelItem => item.Location)</td>
                            <td>@Html.DisplayFor(modelItem => item.Description)</td>
                            <td>@Html.DisplayFor(modelItem => item.InTime)</td>
                            <td>@Html.DisplayFor(modelItem => item.OutTime)</td>
                        </tr>
                    }
                </tbody>
            </table>
            @{
                var prevDisabled = !Model.HasPreviousPage ? "btn-disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "btn-disabled" : "";
            }
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["currentSort"]"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-listType="@ViewData["listType"]"
               asp-route-searchQuery="@ViewData["searchQuery"]"
               class="btn btn-main @prevDisabled">
                Previous
            </a>
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["currentSort"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-listType="@ViewData["listType"]"
               asp-route-searchQuery="@ViewData["searchQuery"]"
               class="btn btn-main @nextDisabled">
                Next
            </a>
        </div>
    </div>
</div>
<div id="imageModal" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" onclick="closeModal()"></button>
            </div>
            <div class="modal-body">
                <img id="modalImage" class="modal-content">
            </div>
        </div>
    </div>
</div>
<script>
    const dateInput = document.getElementById("endDate");

    // Add event listener for input change
    dateInput.addEventListener("change", function () {
        // Submit the form when the date changes
        document.getElementById("worker-traffic").submit();
    });
</script>